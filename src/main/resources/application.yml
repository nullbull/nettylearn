inchat:
  webport: 8090 # Websocket 监听端口
  bossThread: 1
  workerThread: 2
  keepalive: true # 套接字参数, 连接保修, 默认值为 false。启用此功能后, tcp 会主动检测空闲连接的有效性。您可以将此功能视为 tcp 的检测信号机制, 请务必注意, 默认检测信号间隔为 7200s, 即2小时。netty 默认关闭此功能
  backlog: 1024 # 套接字参数, 服务器接受连接的队列长度, 如果队列已满, 则客户端连接将被拒绝
  nodelay: true #TCP参数，立即发送数据，默认值为Ture（Netty默认为True而操作系统默认为False）。该值设置Nagle算法的启用，改算法将小的碎片数据连接成更大的报文来最小化所发送的报文的数量，如果需要发送一些较小的报文，则需要禁用该算法。Netty默认禁用该算法，从而最小化报文传输延时。
  reuseaddr: true #地址复用，默认值False。有四种情况可以使用：(1).当有一个有相同本地地址和端口的socket1处于TIME_WAIT状态时，而你希望启动的程序的socket2要占用该地址和端口，比如重启服务且保持先前端口。(2).有多块网卡或用IP Alias技术的机器在同一端口启动多个进程，但每个进程绑定的本地IP地址不能相同。(3).单个进程绑定相同的端口到多个socket上，但每个socket绑定的ip地址不同。(4).完全相同的地址和端口的重复绑定。但这只用于UDP的多播，不用于TCP。
  sndbuf: 10485760 # tcp 数据发送缓冲区大小。
  revbuf: 10485760 # tcp 数据接收缓冲区大小。
  heart: 180 # 读取超时
  period: 10 # 重新发送周期
  serverName: iot-netty-chat
  initalDelay: 10 # 重置延迟
  maxContext: 65536
  webSocketPath: "/ws"
  webSocketHandler: com.myself.nettychat.bootstrap.handler.DefaultWebSocketHandler # WebSocket 默认处理
